generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URI")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model account_emailaddress {
  id                            Int                           @id @default(autoincrement())
  email                         String                        @db.VarChar(254)
  verified                      Boolean
  primary                       Boolean
  user_id                       String                        @db.VarChar(64)
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "account_emailaddress_user_id_2c513194_fk")
  account_emailconfirmation     account_emailconfirmation[]

  @@unique([user_id, email], map: "account_emailaddress_user_id_email_987c8728_uniq")
  @@index([email], map: "account_emailaddress_email_03be32b2")
  @@index([email], map: "account_emailaddress_email_03be32b2_like")
  @@index([user_id], map: "account_emailaddress_user_id_2c513194")
  @@index([user_id], map: "account_emailaddress_user_id_2c513194_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model account_emailconfirmation {
  id                   Int                  @id @default(autoincrement())
  created              DateTime             @db.Timestamptz(6)
  sent                 DateTime?            @db.Timestamptz(6)
  key                  String               @unique @db.VarChar(64)
  email_address_id     Int
  account_emailaddress account_emailaddress @relation(fields: [email_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "account_emailconfirm_email_address_id_5b7f8c58_fk_account_e")

  @@index([email_address_id], map: "account_emailconfirmation_email_address_id_5b7f8c58")
  @@index([key], map: "account_emailconfirmation_key_f43612bd_like")
}

model auth_group {
  id                                   Int                                    @id @default(autoincrement())
  name                                 String                                 @unique @db.VarChar(150)
  auth_group_permissions               auth_group_permissions[]
  portaljotauth_customusermodel_groups portaljotauth_customusermodel_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                                             Int                                              @id @default(autoincrement())
  name                                           String                                           @db.VarChar(255)
  content_type_id                                Int
  codename                                       String                                           @db.VarChar(100)
  auth_group_permissions                         auth_group_permissions[]
  django_content_type                            django_content_type                              @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  portaljotauth_customusermodel_user_permissions portaljotauth_customusermodel_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authtoken_token {
  key                           String                        @id @db.VarChar(40)
  created                       DateTime                      @db.Timestamptz(6)
  user_id                       String                        @unique @db.VarChar(64)
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "authtoken_token_user_id_35299eff_fk")

  @@index([key], map: "authtoken_token_key_10f0b77e_like")
  @@index([user_id], map: "authtoken_token_user_id_35299eff_like")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                            Int                           @id @default(autoincrement())
  action_time                   DateTime                      @db.Timestamptz(6)
  object_id                     String?
  object_repr                   String                        @db.VarChar(200)
  action_flag                   Int                           @db.SmallInt
  change_message                String
  content_type_id               Int?
  user_id                       String                        @db.VarChar(64)
  django_content_type           django_content_type?          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_like")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

model django_site {
  id                            Int                             @id @default(autoincrement())
  domain                        String                          @unique(map: "django_site_domain_a2e37b91_uniq") @db.VarChar(100)
  name                          String                          @db.VarChar(50)
  socialaccount_socialapp_sites socialaccount_socialapp_sites[]

  @@index([domain], map: "django_site_domain_a2e37b91_like")
}

model portaljotauth_customusermodel {
  password                                       String                                           @db.VarChar(128)
  last_login                                     DateTime?                                        @db.Timestamptz(6)
  userId                                         String                                           @id @db.VarChar(64)
  username                                       String                                           @unique @db.VarChar(64)
  email                                          String                                           @unique @db.VarChar(100)
  active                                         Boolean
  is_staff                                       Boolean
  is_superuser                                   Boolean
  created_on                                     DateTime?                                        @db.Timestamptz(6)
  updated_at                                     DateTime                                         @db.Timestamptz(6)
  customerId                                     String?                                          @db.VarChar(100)
  emailVerified                                  DateTime?                                        @db.Timestamptz(6)
  firstname                                      String                                           @db.VarChar(30)
  image                                          String?                                          @db.VarChar(200)
  lastname                                       String                                           @db.VarChar(30)
  role                                           String?                                          @db.VarChar(50)
  stripeId                                       String?                                          @db.VarChar(100)
  account_emailaddress                           account_emailaddress[]
  authtoken_token                                authtoken_token?
  django_admin_log                               django_admin_log[]
  portaljotauth_customusermodel_groups           portaljotauth_customusermodel_groups[]
  portaljotauth_customusermodel_user_permissions portaljotauth_customusermodel_user_permissions[]
  socialaccount_socialaccount                    socialaccount_socialaccount[]
  waitlists_waitlistentry                        waitlists_waitlistentry[]

  @@index([email], map: "portaljotauth_customusermodel_email_748762d1_like")
  @@index([userId], map: "portaljotauth_customusermodel_userId_20cb9d0b_like")
  @@index([username], map: "portaljotauth_customusermodel_username_86207df2_like")
  @@index([email], map: "portaljotau_email_503378_idx")
  @@index([userId], map: "portaljotau_userId_3210bf_idx")
  @@index([username], map: "portaljotau_usernam_e8806a_idx")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model portaljotauth_customusermodel_groups {
  id                            BigInt                        @id @default(autoincrement())
  customusermodel_id            String                        @db.VarChar(64)
  group_id                      Int
  auth_group                    auth_group                    @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "portaljotauth_custom_group_id_481e35bc_fk_auth_grou")
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [customusermodel_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "portaljotauth_customuserm_customusermodel_id_6c117ac5_fk")

  @@unique([customusermodel_id, group_id], map: "portaljotauth_customuser_customusermodel_id_group_5f750f33_uniq")
  @@index([customusermodel_id], map: "portaljotauth_customuser_customusermodel_id_6c117ac5_like")
  @@index([customusermodel_id], map: "portaljotauth_customusermo_customusermodel_id_6c117ac5")
  @@index([group_id], map: "portaljotauth_customusermodel_groups_group_id_481e35bc")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model portaljotauth_customusermodel_user_permissions {
  id                            BigInt                        @id @default(autoincrement())
  customusermodel_id            String                        @db.VarChar(64)
  permission_id                 Int
  auth_permission               auth_permission               @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "portaljotauth_custom_permission_id_f4bb3e79_fk_auth_perm")
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [customusermodel_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "portaljotauth_customuserm_customusermodel_id_a1296a28_fk")

  @@unique([customusermodel_id, permission_id], map: "portaljotauth_customuser_customusermodel_id_permi_c3cb6f24_uniq")
  @@index([customusermodel_id], map: "portaljotauth_customuser_customusermodel_id_a1296a28_like")
  @@index([customusermodel_id], map: "portaljotauth_customusermo_customusermodel_id_a1296a28")
  @@index([permission_id], map: "portaljotauth_customusermo_permission_id_f4bb3e79")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model socialaccount_socialaccount {
  id                            Int                           @id @default(autoincrement())
  provider                      String                        @db.VarChar(200)
  uid                           String                        @db.VarChar(191)
  last_login                    DateTime                      @db.Timestamptz(6)
  date_joined                   DateTime                      @db.Timestamptz(6)
  extra_data                    Json
  user_id                       String                        @db.VarChar(64)
  portaljotauth_customusermodel portaljotauth_customusermodel @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "socialaccount_socialaccount_user_id_8146e70c_fk")
  socialaccount_socialtoken     socialaccount_socialtoken[]

  @@unique([provider, uid], map: "socialaccount_socialaccount_provider_uid_fc810c6e_uniq")
  @@index([user_id], map: "socialaccount_socialaccount_user_id_8146e70c")
  @@index([user_id], map: "socialaccount_socialaccount_user_id_8146e70c_like")
}

model socialaccount_socialapp {
  id                            Int                             @id @default(autoincrement())
  provider                      String                          @db.VarChar(30)
  name                          String                          @db.VarChar(40)
  client_id                     String                          @db.VarChar(191)
  secret                        String                          @db.VarChar(191)
  key                           String                          @db.VarChar(191)
  provider_id                   String                          @db.VarChar(200)
  settings                      Json
  socialaccount_socialapp_sites socialaccount_socialapp_sites[]
  socialaccount_socialtoken     socialaccount_socialtoken[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model socialaccount_socialapp_sites {
  id                      BigInt                  @id @default(autoincrement())
  socialapp_id            Int
  site_id                 Int
  django_site             django_site             @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "socialaccount_social_site_id_2579dee5_fk_django_si")
  socialaccount_socialapp socialaccount_socialapp @relation(fields: [socialapp_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "socialaccount_social_socialapp_id_97fb6e7d_fk_socialacc")

  @@unique([socialapp_id, site_id], map: "socialaccount_socialapp__socialapp_id_site_id_71a9a768_uniq")
  @@index([site_id], map: "socialaccount_socialapp_sites_site_id_2579dee5")
  @@index([socialapp_id], map: "socialaccount_socialapp_sites_socialapp_id_97fb6e7d")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model socialaccount_socialtoken {
  id                          Int                         @id @default(autoincrement())
  token                       String
  token_secret                String
  expires_at                  DateTime?                   @db.Timestamptz(6)
  account_id                  Int
  app_id                      Int?
  socialaccount_socialaccount socialaccount_socialaccount @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "socialaccount_social_account_id_951f210e_fk_socialacc")
  socialaccount_socialapp     socialaccount_socialapp?    @relation(fields: [app_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "socialaccount_social_app_id_636a42d7_fk_socialacc")

  @@unique([app_id, account_id], map: "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq")
  @@index([account_id], map: "socialaccount_socialtoken_account_id_951f210e")
  @@index([app_id], map: "socialaccount_socialtoken_app_id_636a42d7")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model waitlists_waitlistentry {
  id                            BigInt                         @id @default(autoincrement())
  email                         String                         @db.VarChar(254)
  description                   String?
  updated                       DateTime                       @db.Timestamptz(6)
  timestamp                     DateTime                       @db.Timestamptz(6)
  user_id                       String?                        @db.VarChar(64)
  portaljotauth_customusermodel portaljotauth_customusermodel? @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "waitlists_waitlistentry_user_id_818900f5_fk")

  @@index([user_id], map: "waitlists_waitlistentry_user_id_818900f5")
  @@index([user_id], map: "waitlists_waitlistentry_user_id_818900f5_like")
}
